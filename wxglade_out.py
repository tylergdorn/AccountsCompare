#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.0 on Tue Jan 22 13:32:44 2019
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((600, 400))
        self.window_1 = wx.SplitterWindow(self, wx.ID_ANY)
        self.window_1_pane_1 = wx.Panel(self.window_1, wx.ID_ANY)
        self.alproUpload = wx.Button(self.window_1_pane_1, wx.ID_ANY, "Browse...")
        self.alproUpload.Bind(wx.EVT_BUTTON, self.onDir)
        self.window_1_pane_2 = wx.Panel(self.window_1, wx.ID_ANY)
        self.QBUpload = wx.Button(self.window_1_pane_2, wx.ID_ANY, "Browse...")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame")
        self.window_1.SetMinimumPaneSize(20)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        AlProUploadText = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, "Upload Al-Pro File", style=wx.ALIGN_CENTER)
        sizer_2.Add(AlProUploadText, 0, wx.ALIGN_CENTER, 0)
        sizer_2.Add(self.alproUpload, 0, wx.ALIGN_CENTER, 0)
        self.window_1_pane_1.SetSizer(sizer_2)
        QBUploadText = wx.StaticText(self.window_1_pane_2, wx.ID_ANY, "Upload Quickbooks .xlsx file", style=wx.ALIGN_CENTER)
        sizer_3.Add(QBUploadText, 0, wx.ALIGN_CENTER, 0)
        sizer_3.Add(self.QBUpload, 0, wx.ALIGN_CENTER, 0)
        self.window_1_pane_2.SetSizer(sizer_3)
        self.window_1.SplitVertically(self.window_1_pane_1, self.window_1_pane_2)
        sizer_1.Add(self.window_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def onDir(self, event):
        """
        Show the DirDialog and print the user's choice to stdout
        """
        dlg = wx.DirDialog(self, "Choose a directory:",
                           style=wx.DD_DEFAULT_STYLE
                           #| wx.DD_DIR_MUST_EXIST
                           #| wx.DD_CHANGE_DIR
                           )
        if dlg.ShowModal() == wx.ID_OK:
            print("You chose %s" % dlg.GetPath())
        dlg.Destroy()
# end of class MyFrame

class Processed(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Processed.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 300))
        self.list_ctrl_1 = wx.ListCtrl(self, wx.ID_ANY, style=wx.LC_HRULES | wx.LC_REPORT | wx.LC_VRULES)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Processed.__set_properties
        self.SetTitle("frame_1")
        self.list_ctrl_1.AppendColumn("A", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.list_ctrl_1.AppendColumn("B", format=wx.LIST_FORMAT_LEFT, width=-1)
        self.list_ctrl_1.AppendColumn("C", format=wx.LIST_FORMAT_LEFT, width=-1)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Processed.__do_layout
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_4.Add(self.list_ctrl_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_4)
        self.Layout()
        # end wxGlade

# end of class Processed

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
